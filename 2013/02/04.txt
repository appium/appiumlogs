[2013-02-04 00:00:24] rodericj, joining. (#appium)
[2013-02-04 00:08:07] rodericj, quitting. (Ping timeout: 260 seconds)
[2013-02-04 01:09:24] rodericj, joining. (#appium)
[2013-02-04 01:18:01] rodericj, quitting. (Ping timeout: 244 seconds)
[2013-02-04 01:25:54] alexglow, quitting. (Ping timeout: 276 seconds)
[2013-02-04 01:44:41] berni, joining. (#appium)
[2013-02-04 01:46:41] rodericj, joining. (#appium)
[2013-02-04 01:54:14] rodericj, quitting. (Ping timeout: 255 seconds)
[2013-02-04 03:00:37] rodericj, joining. (#appium)
[2013-02-04 03:09:38] rodericj, quitting. (Ping timeout: 256 seconds)
[2013-02-04 04:16:21] rodericj, joining. (#appium)
[2013-02-04 04:25:01] rodericj, quitting. (Ping timeout: 245 seconds)
[2013-02-04 05:32:14] rodericj, joining. (#appium)
[2013-02-04 05:41:00] rodericj, quitting. (Ping timeout: 244 seconds)
[2013-02-04 06:46:56] rodericj, joining. (#appium)
[2013-02-04 06:56:05] rodericj, quitting. (Ping timeout: 252 seconds)
[2013-02-04 07:22:35] rodericj, joining. (#appium)
[2013-02-04 07:32:43] rodericj, quitting. (Ping timeout: 246 seconds)
[2013-02-04 08:00:16] smccarthy, joining. (#appium)
[2013-02-04 08:40:21] rodericj, joining. (#appium)
[2013-02-04 08:41:15] alexglow, joining. (#appium)
[2013-02-04 08:47:30] rodericj, quitting. (Ping timeout: 264 seconds)
[2013-02-04 09:27:15] lukeis, joining. (#appium)
[2013-02-04 09:36:54] rodericj, joining. (#appium)
[2013-02-04 09:47:03] alexglow, quitting. (Ping timeout: 276 seconds)
[2013-02-04 09:54:34] santiycr, joining. (#appium)
[2013-02-04 09:59:56] alexglow, joining. (#appium)
[2013-02-04 10:04:02] alexglow, quitting. (Ping timeout: 240 seconds)
[2013-02-04 10:04:57] smccarthy, quitting. (Remote host closed the connection)
[2013-02-04 10:30:29] toks, joining. (#appium)
[2013-02-04 10:35:26] jlipps, joining. (#appium)
[2013-02-04 10:41:57] alexglow, joining. (#appium)
[2013-02-04 10:50:29] toks: o.o
[2013-02-04 10:58:35] skatterbean: toks: looks like in mechanic.js there is a tap function that calls UIATarget's tapWithOptions
[2013-02-04 10:59:08] toks: o.o
[2013-02-04 10:59:26] skatterbean: toks: mechanic.js line 416
[2013-02-04 10:59:46] skatterbean: toks: which calls http://developer.apple.com/library/ios/#documentation/ToolsLanguages/Reference/UIATargetClassReference/UIATargetClass/UIATargetClass.html#//apple_ref/doc/uid/TP40009924
[2013-02-04 11:00:09] toks: can it let me tap an arbitrary point on the screen? In general, if I have to actually give an element as an argument ....it'll crash appium
[2013-02-04 11:00:14] toks: cuz it's "out of focus"
[2013-02-04 11:00:17] toks: but, I'll try it
[2013-02-04 11:01:01] skatterbean: tapWithOptions, you can send it a js object with x and y keys
[2013-02-04 11:01:14] toks: o_O
[2013-02-04 11:01:16] toks: hmm
[2013-02-04 11:01:21] toks: okay... here I go then!
[2013-02-04 11:01:27] skatterbean: toks: look at that link in the apple doc
[2013-02-04 11:01:38] skatterbean: the first arg is a tapPointObject
[2013-02-04 11:02:22] skatterbean: so you'd send {x:x_coord, y:y_coord}
[2013-02-04 11:02:25] toks: ooooooohhhhhhh, yeah I'm sure the UIAutomator has all the stuff needed... I just don't think appium has "mapped" that function to a selenium method
[2013-02-04 11:02:30] toks: but let me double-check
[2013-02-04 11:02:57] skatterbean: toks: I'm looking at the appium source, that's how I found this
[2013-02-04 11:03:05] toks: D:
[2013-02-04 11:08:04] jcarr, joining. (#appium)
[2013-02-04 11:14:31] toks: skatterbean: ok. rocking
[2013-02-04 11:14:39] toks: Needed a git pull and some more nodejs modules
[2013-02-04 11:20:13] skatterbean: toks: from selenium.webdriver.common.touch_actions import TouchActions
[2013-02-04 11:26:11] toks: good times :)
[2013-02-04 11:26:21] skatterbean: wait toks
[2013-02-04 11:31:28] toks: 501 Not implemented :(
[2013-02-04 11:32:50] toks: TouchActions(driver).tap_and_hold(dict(x=160.0,y=50.0),1).release(dict(x-160.0,y=50.0),1).perform()
[2013-02-04 11:33:03] toks: (note, I completely made up that "1" argument)
[2013-02-04 11:33:10] toks: I have no idea what's suppose to be there
[2013-02-04 11:33:18] toks: lemme double-check :p
[2013-02-04 11:33:47] toks: ooooohhhh
[2013-02-04 11:33:54] toks: tap_and_hold(self, x, y)
[2013-02-04 11:34:09] toks: retrying(but if it's not implemented,... probably will be the same)
[2013-02-04 11:35:05] toks: yeah, still 501
[2013-02-04 11:37:03] toks: Ah, https://github.com/appium/appium/blob/master/app/routing.js
[2013-02-04 11:37:18] toks: So I guess this is the complete list of what is implemented.
[2013-02-04 11:37:50] jcarr: toks, that's /session/:sessionId/touch/down I think
[2013-02-04 11:37:56] toks: yup
[2013-02-04 11:38:00] toks: looking at the logs
[2013-02-04 11:38:06] toks: it's /touch/up|down
[2013-02-04 11:38:15] jcarr: I have no idea why I called that 'tap_and_hold'
[2013-02-04 11:38:16] toks: and it's not in routing.js
[2013-02-04 11:38:19] toks: :p
[2013-02-04 11:38:24] jcarr: but I guess that's technically what it does
[2013-02-04 11:38:32] jcarr: should be 'touch_down'
[2013-02-04 11:38:36] jcarr: I might even submit that
[2013-02-04 11:38:43] toks: agreed :)
[2013-02-04 11:38:54] toks: well...actually
[2013-02-04 11:39:10] toks: tap_and_hold == keydown ....it could make sense on a touch screen
[2013-02-04 11:39:11] skatterbean: jcarr: yeah, we're looking for ways to dismiss the detail view of a UISplitViewController
[2013-02-04 11:39:13] skatterbean: which just needs a tap
